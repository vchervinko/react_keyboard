{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","handleKeyUp","event","key","setState","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"sMAOaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,MAFhB,EAaEC,YAAc,SAACC,GACRA,EAAMC,KACT,EAAKC,SAAS,CAAEJ,WAAY,OAG9B,EAAKI,SAAS,CAAEJ,WAAYE,EAAMC,OAlBtC,uDAKE,WACEE,SAASC,iBAAiB,QAASC,KAAKN,eAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,eAV/C,oBAqBE,WACE,IAAQD,EAAeO,KAAKR,MAApBC,WAER,OACE,qBAAKS,UAAU,YAAf,SACE,mBAAGA,UAAU,kBAAb,SACGT,EAAU,mCACqBA,EADrB,KAEP,kCA7Bd,GAAyBU,IAAMC,WCF/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,U","file":"static/js/main.4e85189b.chunk.js","sourcesContent":["import React from 'react';\nimport './index.scss';\n\ntype State = {\n  pressedKey: string | null;\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    pressedKey: null,\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleKeyUp);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleKeyUp);\n  }\n\n  handleKeyUp = (event: KeyboardEvent) => {\n    if (!event.key) {\n      this.setState({ pressedKey: null });\n    }\n\n    this.setState({ pressedKey: event.key });\n  };\n\n  render() {\n    const { pressedKey } = this.state;\n\n    return (\n      <div className=\"handleKey\">\n        <p className=\"handleKey__info\">\n          {pressedKey\n            ? `The last pressed key is [${pressedKey}]`\n            : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}